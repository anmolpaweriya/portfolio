/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useRef } from 'react'
import { useGLTF, useVideoTexture } from '@react-three/drei'
import { GroupProps } from '@react-three/fiber'
import { Group, Material } from 'three'
import { useGSAP } from '@gsap/react';
import gsap from 'gsap';
import { SkinnedMesh } from 'three';
import { GLTF } from 'three-stdlib';

type ComputerProps = {
    texture: string
} & GroupProps;

type ComputerGLTF = GLTF & {
    nodes: {
        [key: string]: SkinnedMesh; // Cast nodes to SkinnedMesh
    };
    materials: {
        [key: string]: Material;
    };
};

export default function Computer(args: ComputerProps) {
    const { texture, ...props } = args
    const group = useRef<Group>(null)
    const { nodes, materials } = useGLTF('/models/computer.glb') as ComputerGLTF

    const txt = useVideoTexture(texture ? texture : '/textures/project/project1.mp4');
    txt.flipY = false;

    useGSAP(() => {
        group.current &&
            gsap.from(group.current?.rotation, {
                y: 1
            })
    }, [texture])


    return (
        <group ref={group} {...props} dispose={null}>
            <group name="Scene">
                <mesh
                    name="monitor-screen"
                    castShadow
                    receiveShadow
                    geometry={nodes['monitor-screen'].geometry}
                    material={nodes['monitor-screen'].material}
                    position={[0.127, 1.831, 0.511]}
                    rotation={[1.571, -0.005, 0.031]}
                    scale={[0.661, 0.608, 0.401]}
                >
                    <meshBasicMaterial map={txt} />
                </mesh>

                <group
                    name="Monitor-B-_computer_0"
                    position={[0.266, 1.132, 0.051]}
                    rotation={[0, -0.033, 0]}
                    scale={[0.042, 0.045, 0.045]}>
                    <mesh
                        name="Monitor-B-_computer_0_1"
                        castShadow
                        receiveShadow
                        geometry={nodes['Monitor-B-_computer_0_1'].geometry}
                        material={materials.computer}
                    />
                    <mesh
                        name="Monitor-B-_computer_0_2"
                        castShadow
                        receiveShadow
                        geometry={nodes['Monitor-B-_computer_0_2'].geometry}
                        material={materials.base__0}
                    />
                    <mesh
                        name="Monitor-B-_computer_0_3"
                        castShadow
                        receiveShadow
                        geometry={nodes['Monitor-B-_computer_0_3'].geometry}
                        material={materials.Material_36}
                    />
                    <mesh
                        name="Monitor-B-_computer_0_4"
                        castShadow
                        receiveShadow
                        geometry={nodes['Monitor-B-_computer_0_4'].geometry}
                        material={materials.Material_35}
                    />
                    <mesh
                        name="Monitor-B-_computer_0_5"
                        castShadow
                        receiveShadow
                        geometry={nodes['Monitor-B-_computer_0_5'].geometry}
                        material={materials.Material_34}
                    />
                    <mesh
                        name="Monitor-B-_computer_0_6"
                        castShadow
                        receiveShadow
                        geometry={nodes['Monitor-B-_computer_0_6'].geometry}
                        material={materials.keys}
                    />
                    <mesh
                        name="Monitor-B-_computer_0_7"
                        castShadow
                        receiveShadow
                        geometry={nodes['Monitor-B-_computer_0_7'].geometry}
                        material={materials.keys2}
                    />
                    <mesh
                        name="Monitor-B-_computer_0_8"
                        castShadow
                        receiveShadow
                        geometry={nodes['Monitor-B-_computer_0_8'].geometry}
                        material={materials.Material_37}
                    />
                </group>
            </group>
        </group>
    )
}

useGLTF.preload('/models/computer.glb')
